version: '4'

environment:
  RAILS_ENV: development

compose:
  files:
    - docker-compose.yml

interaction:
  sh:
    description: Open the app container bash shell
    service: rails-backend
    command: /bin/bash
    compose_run_options: [no-deps]

  bundle:
    description: Run bundler command
    service: rails-backend
    command: bundle
    compose_run_options: [no-deps]

  rake:
    description: Run rake command
    service: rails-backend
    command: bundle exec rake

  rails:
    description: Run rails command
    service: rails-backend
    command: bundle exec rails
    subcommands:
      s:
        description: Start rails server
        service: rails-app
        compose_run_options: [service-ports]

  yarn:
    description: Run yarn command
    service: rails-backend
    command: yarn

  minitest:
    description: Run minitest
    service: rails-backend
    environment:
      RAILS_ENV: test
    command: bundle exec rails test

  cop:
    description: Run rubocop
    service: rails-backend
    default_args: -a
    command: bundle exec rubocop

  psql:
    description: Run psql console
    service: postgres
    command: psql -h postgres -U postgres -d postgres

  inspect_all:
    description: Run all checkers
    service: rails-backend
    command: bundle exec license_finder
    command: bundle exec rails test
    command: bundle exec rails_best_practices .
    command: bundle exec bundle-audit
    command: bundle exec brakeman

provision:
  - dip compose up -d postgres
  - dip yarn install
  - dip sh -c "./bin/setup 2> /dev/null; exit 0"
  - dip sh -c ./bin/setup
  - dip sh -c "RAILS_ENV=test ./bin/setup"